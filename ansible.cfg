# Config file for ansible -- https://ansible.com/
# ===============================================

# Nearly all parameters can be overridden in ansible-playbook
# or with command line flags. ansible will read ANSIBLE_CONFIG,
# ansible.cfg in the current working directory, .ansible.cfg in
# the home directory or /etc/ansible/ansible.cfg, whichever it
# finds first

# docs: https://docs.ansible.com/ansible/latest/reference_appendices/config.html


# CODE ENIGMA RECOMMENDED CONFIG
# This file contains the recommended config changes for ce-deploy

# This file does not contain all the options for Ansible
# To generate an example config file (a "disabled" one with all default settings, commented out):
#               $ ansible-config init --disabled > ansible.cfg

[defaults]
ansible_managed = Code Enigma - This file is managed in Ansible - Do not edit.
interpreter_python = auto_silent
remote_tmp     = /tmp

# SSH timeout
timeout = 60

# Load the SOPS plugin
# Docs: https://docs.ansible.com/ansible/latest/collections/community/sops/sops_vars.html
vars_plugins_enabled = host_group_vars,community.sops.sops

# Additional plugin lookup paths
vars_plugins       = $HOME/ce-deploy/plugins/vars:/usr/share/ansible/plugins/vars
callback_plugins   = $HOME/ce-deploy/plugins/callback:/usr/share/ansible/plugins/callback

inventory      = $HOME/ce-deploy/hosts

# additional paths to search for roles in, colon separated
# Assumes ce-deploy is in the $HOME directory of the executing user
# $HOME/ce-deploy/galaxy/roles is first so Ansible Galaxy installs roles there first
roles_path = $HOME/ce-deploy/galaxy/roles:$HOME/ce-deploy/roles:$HOME/ce-deploy/config/roles:$HOME/.ansible/roles:$HOME/.ansible/collections/ansible_collections
collections_path = $HOME/ce-deploy/galaxy/

# uncomment this to disable SSH key host checking
# @todo We probably want to accept new keys, but fail on changes.
host_key_checking = False

# change the default callback, you can only have one 'stdout' type  enabled at a time.
# use 'yaml' for tidy output
stdout_callback = yaml
stderr_callback = yaml

# display time taken by each task
callbacks_enabled = ansible.posix.profile_tasks

# if inventory variables overlap, does the higher precedence one win
# or are hash values merged together?  The default is 'replace' but
# this can also be set to 'merge'.
hash_behaviour = merge

# retry files
# When a playbook fails by default a .retry file will be created in ~/
# You can disable this feature by setting retry_files_enabled to False
# and you can change the location of the files by setting retry_files_save_path
retry_files_enabled = False

# set default errors for all plays
any_errors_fatal = True

[inventory]
# enable inventory plugins, default: 'host_list', 'script', 'yaml', 'ini', 'auto'
# we provide an ini file by default in ce-deploy-config-example.
# you can use multiple plugins at once, e.g. ini and yaml - Ansible will load all recognised inventory files.
enable_plugins = ini, yaml, host_list
# uncomment the below line and comment the above for AWS EC2 inventory discovery
#enable_plugins = amazon.aws.aws_ec2, ini, yaml, host_list

[ssh_connection]
# Enabling pipelining reduces the number of SSH operations required to
# execute a module on the remote server. This can result in a significant
# performance improvement when enabled, however when using "sudo:" you must
# first disable 'requiretty' in /etc/sudoers
#
# By default, this option is disabled to preserve compatibility with
# sudoers configurations that have requiretty (the default on many distros).
#
pipelining = True

[colors]
highlight = white
verbose = bright blue
warn = bright purple
error = bright red
debug = bright gray
deprecate = purple
skip = cyan
unreachable = red
ok = green
changed = yellow
diff_add = green
diff_remove = red
diff_lines = cyan
